{"version":3,"sources":["components/Search/Search.js","components/img/star_wars_logo.png","components/Navbar/Navbar.js","components/Loader/Loader.js","components/FilmsCards/FilmsCards.js","components/SinglCard/SingleCard.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","className","type","name","placeholder","onChange","onHandlerChange","to","Navbar","src","logo","alt","Loader","FilmsCards","sortData","data","sort","a","b","title","localeCompare","map","film","index","opening_crawl","director","release_date","episode_id","SingleCard","useParams","planets","res","id","find","starships","useState","planetsData","setPlanets","starshipsData","setStarships","loading","setLoading","useEffect","fetchStarships","Promise","all","url","fetch","then","json","response","console","log","fetchFilms","planet","climate","diameter","gravity","orbital_period","population","rotation_period","surface_water","terrain","manufacturer","model","MGLT","cargo_capacity","consumables","cost_in_credits","crew","created","slice","edited","length","max_atmosphering_speed","passengers","starship_class","App","films","setFilms","search","setSearch","filteredFilms","setFilteredFilm","results","filter","toLowerCase","includes","e","preventDefault","target","value","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c9001d9.chunk.js","sourcesContent":["import React from 'react';\nimport './Search.sass';\nimport {NavLink} from \"react-router-dom\";\n\nfunction Search(props) {\n\n    return (\n        <div className=\"search-box\">\n            <input type=\"text\"\n                   className=\"search-txt\"\n                   name=\"\"\n                   placeholder=\"Search\"\n                   onChange={props.onHandlerChange}\n            />\n            <NavLink to=\"#\" className=\"search-btn\">\n                <i className=\"fas fa-search\"/>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/star_wars_logo.b516d009.png\";","import React from 'react';\nimport './Navbar.sass';\nimport Search from \"../Search/Search\";\nimport {NavLink} from \"react-router-dom\";\nimport logo from '../img/star_wars_logo.png';\n\nconst Navbar = (props) => {\n    return (\n        <nav className='nav'>\n            <div className=\"nav-logo\">\n                <NavLink to='/star_wars_films/'>\n                    <img src={logo} alt=\"star wars logo\"/>\n                </NavLink>\n            </div>\n            <div className=\"nav-search\">\n                <Search onHandlerChange={props.onHandlerChange}/>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport \"./Loader.sass\";\n\nconst Loader = () => {\n    return (\n        <div className=\"containerLoader\">\n            <div className=\"preloader\">\n                <div className=\"loader\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Loader;\n","import React from 'react';\nimport \"./FilmsCards.sass\";\nimport {NavLink} from \"react-router-dom\";\n\nconst FilmsCards = ({data}) => {\n\n    let sortData = data.sort((a, b) => (a.title).localeCompare(b.title));\n\n    return (\n        <div className=\"films-cards\">\n            {sortData.map((film, index) => {\n                return (\n                    <div className=\"card\" key={index}>\n                        <div className=\"card-title\">{film.title}</div>\n                        <div className=\"card-description\">{film.opening_crawl}</div>\n                        <div className=\"card-creator\">\n                            <div className=\"creator\">{film.director}</div>\n                            <div className=\"release-data\">{film.release_date}</div>\n                        </div>\n                        <NavLink to={`/star_wars_films/singleCard/${film.episode_id}`}>\n                            <div className=\"card-btn\">\n                                Show more\n                            </div>\n                        </NavLink>\n                    </div>\n                )\n            })}\n\n        </div>\n    )\n}\n\nexport default FilmsCards;\n","import React, {useState, useEffect} from 'react';\nimport \"./SingleCard.sass\";\nimport {useParams} from 'react-router-dom';\nimport Loader from \"../Loader/Loader\";\n\nconst SingleCard = ({data}) => {\n\n    const {episode_id} = useParams();\n    //get array of planets film\n    const allPlanets = data.map(res => ({id: res.episode_id, planets: res.planets,}));\n    let filmPlanets = allPlanets.find(res => res.id === +episode_id)\n    let planets = filmPlanets.planets\n    // console.log(planets);\n\n    //get array of starships film\n    const AllStarships = data.map(res => ({id: res.episode_id, starships: res.starships}));\n    let filmStarships = AllStarships.find(res => res.id === +episode_id);\n    let starships = filmStarships.starships\n    // console.log(starships);\n\n    const [planetsData, setPlanets] = useState([]);\n    const [starshipsData, setStarships] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchStarships = async () => {\n            try {\n                const response = await Promise.all(\n                    starships.map(url => fetch(`${url}?format=json`, {\n                        // referrerPolicy: \"origin-when-cross-origin\",\n                        // credentials: \"include\",\n                    }).then(res => res.json()))\n                );\n                setStarships(response);\n                setLoading(false);\n            } catch (error) {\n                console.log(\"Error\", error)\n            }\n        }\n        const fetchFilms = async () => {\n            try {\n                const response = await Promise.all(\n                    planets.map(url => fetch(`${url}?format=json`, {\n                        // referrerPolicy: \"origin-when-cross-origin\",\n                        // credentials: \"include\",\n                    }).then(res => res.json()))\n                );\n                setPlanets(response);\n                setLoading(false);\n            } catch (error) {\n                console.log(\"Error\", error)\n            }\n        };\n\n        fetchStarships();\n        fetchFilms();\n\n        console.log('starships', starshipsData);\n        console.log('planets', planetsData);\n    }, []);\n\n    return (\n        <>\n            <div className=\"single-card\" id={episode_id}>\n\n                <div className=\"card\">\n                    <div className=\"cards-planets-header\"><h1>Planets:</h1></div>\n                        {\n                            loading\n                                ? <Loader/>\n                                : <div className=\"cards-planets\">\n                                    {\n                                        planetsData.map((planet, index) => (\n                                            <div className='card-planets' key={index}>\n                                                <div>Name: <span>{planet.name}</span></div>\n                                                <div>Climate: <span>{planet.climate}</span></div>\n                                                <div>Diameter: <span>{planet.diameter}</span></div>\n                                                <div>Gravity: <span>{planet.gravity}</span></div>\n                                                <div>Orbital period: <span>{planet.orbital_period}</span></div>\n                                                <div>Population: <span>{planet.population}</span></div>\n                                                <div>Rotation period: <span>{planet.rotation_period}</span></div>\n                                                <div>Surface water: <span>{planet.surface_water}</span></div>\n                                                <div>Terrain: <span>{planet.terrain}</span></div>\n                                            </div>\n                                        ))\n                                    }\n                                </div>\n                        }\n\n                        <div className=\"cards-planets-header\"><h1>Starships:</h1></div>\n                        {\n                            loading\n                                ? <Loader/>\n                                : <div className=\"cards-planets\">\n\n                                    {starshipsData.map((starships, index) => (\n                                        <div className='card-starships' key={index}>\n                                            <div>Manufacturer: <span>{starships.manufacturer}</span></div>\n                                            <div>Model: <span>{starships.model}</span></div>\n                                            <div>Name: <span>{starships.name}</span></div>\n                                            <div>MGLT: <span>{starships.MGLT}</span></div>\n                                            <div>Cargo Capacity: <span>{starships.cargo_capacity}</span></div>\n                                            <div>Consumables: <span>{starships.consumables}</span></div>\n                                            <div>Cost in credits: <span>{starships.cost_in_credits}</span></div>\n                                            <div>Crew: <span>{starships.crew}</span></div>\n                                            <div>Created: <span>{starships.created.slice(0, 10)}</span></div>\n                                            <div>Edited: <span>{starships.edited.slice(0, 10)}</span></div>\n                                            <div>Length: <span>{starships.length}</span></div>\n                                            <div>Max atmosphering speed: <span>{starships.max_atmosphering_speed}</span></div>\n                                            <div>Passengers: <span>{starships.passengers}</span></div>\n                                            <div>Starship class<span>{starships.starship_class}</span></div>\n                                        </div>\n                                    ))}\n                                </div>\n                        }\n                </div>\n\n            </div>\n        </>\n\n    )\n}\n\nexport default SingleCard;\n","import React, {useState, useEffect} from 'react';\nimport './App.sass';\nimport {Route, Switch} from 'react-router-dom';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Loader from \"./components/Loader/Loader\";\nimport FilmsCards from \"./components/FilmsCards/FilmsCards\";\nimport SingleCard from \"./components/SinglCard/SingleCard\";\n\nfunction App() {\n    const [films, setFilms] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [search, setSearch] = useState('');\n    const [filteredFilms, setFilteredFilm] = useState()\n\n    useEffect(() => {\n\n        async function fetchFilms() {\n            let res = await fetch('https://swapi.dev/api/films/?format=json', {\n                // referrerPolicy: \"origin-when-cross-origin\",\n                // credentials: \"include\",\n\n            });\n            let data = await res.json();\n            setFilms(data.results);\n            setLoading(false);\n        }\n\n        fetchFilms();\n    }, []);\n\n    useEffect(() => {\n        setFilteredFilm(films.filter(film => {\n            return film.title.toLowerCase().includes(search.toLowerCase())\n        }))\n    }, [search, films])\n\n\n    const onHandlerChange = e => {\n        e.preventDefault();\n        setSearch(e.target.value);\n    }\n\n    // console.log(films);\n\n    return (\n        <div className=\"App\">\n            <div className=\"nav-container\"><Navbar onHandlerChange={onHandlerChange}/></div>\n            {\n                loading\n                    ? <Loader/>\n                    : (\n                        <Switch>\n                            <Route exact path='/star_wars_films/' render={() => <FilmsCards data={filteredFilms}/>}/>\n                            <Route exact path={`/star_wars_films/singleCard/:episode_id`}\n                                   render={() => <SingleCard data={films}/>}/>\n                            <Route render={() => <h1>404: page not found</h1>}/>\n                        </Switch>\n                    )\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}